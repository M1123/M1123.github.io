{"version":3,"sources":["logo.svg","components/card.js","components/resultlist.js","components/searchinput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","card","react_default","a","createElement","className","href","this","props","owner","html_url","target","src","avatar_url","alt","login","name","stargazers_count","role","aria-label","watchers_count","React","Component","rl","total_count","items","map","key","components_card","Si","_this","type","placeholder","onChange","e","startSearch","value","App","state","searchingGH","debounce","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","text","apiurl","data","wrap","_context","prev","next","fetch","concat","sent","length","json","console","log","setState","stop","_x","apply","arguments","logo","searchinput","resultlist","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f8b6bfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport './style.css'\r\nclass card extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"cardbody\">\r\n                    <a href={this.props.card.owner.html_url} target=\"blank\">\r\n                        <img src={this.props.card.owner.avatar_url} alt={this.props.card.owner.login}/>\r\n                    </a>\r\n                    <h2>\r\n                        <a href={this.props.card.html_url} target=\"blank\">\r\n                            {this.props.card.name}\r\n                        </a>\r\n                    </h2>\r\n                </div>\r\n                <p className=\"counts\">\r\n                    <span>&#9733; {this.props.card.stargazers_count}</span>\r\n                    <span role=\"img\" aria-label=\"watchers\">üë§ {this.props.card.watchers_count}</span>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default card;","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\nclass rl extends React.Component{\r\n    render(){ \r\n        return(\r\n            <div>\r\n                <h2>–ù–∞–π–¥–µ–Ω–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: {this.props.total_count}</h2>\r\n                <div className=\"wrapper\">\r\n                    {this.props.items.map((card, key) =>\r\n                    <Card card={card} key={key}  />)} \r\n                </div>         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default rl;","import React from \"react\";\r\nclass Si extends React.Component{\r\n    render(){\r\n        return(\r\n            <input type=\"text\" name=\"sghinput\" placeholder=\"–ü–æ–∏—Å–∫\" onChange={e=> this.props.startSearch(e.target.value)}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Si;","import React, {Component} from 'react';\n// import {connect} from 'react-redux';\nimport {debounce} from 'lodash';\nimport logo from './logo.svg';\nimport Resl from './components/resultlist';\nimport Si from './components/searchinput';\nimport './App.css';\n\nclass App extends Component{\n  state = {items: []}\n  searchingGH = debounce( async (text) => {\n    const apiurl= await fetch(`https://api.github.com/search/repositories?q=${text}`);\n    let data;\n    if (text.length>1){\n      data = await apiurl.json();\n      var items=[];\n      items = data.items;\n      console.log(items);      \n      this.setState({\n        items: items,\n        total_count: data.total_count\n      });\n    } \n  },500);\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>–ü–æ–∏—Å–∫ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º –Ω–∞ github</p>  \n        </header>\n        <Si startSearch={this.searchingGH} />\n        <Resl \n          total_count={this.state.total_count} \n          items={this.state.items}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Provider} from 'react-redux'\n// import {createStore} from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// function storage(state=[],action){\n//     if (action.type === 'UPD'){\n//         return[\n//             ...state,\n//             action.items\n//         ];\n//     }\n//     return state;\n// }\n// const store = createStore(storage)\n  \nReactDOM.render( \n    // <Provider store={store}>\n        <App />\n    // </Provider>\n        \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}